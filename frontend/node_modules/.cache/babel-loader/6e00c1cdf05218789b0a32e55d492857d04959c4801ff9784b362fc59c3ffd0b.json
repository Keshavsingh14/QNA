{"ast":null,"code":"const API_URL = 'http://localhost:5000/api';\nexport const saveCode = async (code, language) => {\n  const response = await fetch(`${API_URL}/save`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      code,\n      language\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to save code');\n  }\n  return response.json();\n};\nexport const executeCode = async (code, language) => {\n  try {\n    const response = await fetch(`${API_URL}/execute`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        code,\n        language\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Execution failed');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error(`Execution failed: ${error.message}`);\n  }\n};","map":{"version":3,"names":["API_URL","saveCode","code","language","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","executeCode","data","error","message"],"sources":["C:/Users/kesha/online-code-editor/frontend/src/utils/api.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api';\n\nexport const saveCode = async (code, language) => {\n  const response = await fetch(`${API_URL}/save`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ code, language }),\n  });\n  \n  if (!response.ok) {\n    throw new Error('Failed to save code');\n  }\n  \n  return response.json();\n};\n\nexport const executeCode = async (code, language) => {\n  try {\n    const response = await fetch(`${API_URL}/execute`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ code, language }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Execution failed');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error(`Execution failed: ${error.message}`);\n  }\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;EAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,OAAO,EAAE;IAC9CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,IAAI;MAAEC;IAAS,CAAC;EACzC,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxC;EAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOZ,IAAI,EAAEC,QAAQ,KAAK;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,UAAU,EAAE;MACjDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,IAAI;QAAEC;MAAS,CAAC;IACzC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;IACrC;IAEA,MAAMG,IAAI,GAAG,MAAMX,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,OAAOE,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIJ,KAAK,CAAC,qBAAqBI,KAAK,CAACC,OAAO,EAAE,CAAC;EACvD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}