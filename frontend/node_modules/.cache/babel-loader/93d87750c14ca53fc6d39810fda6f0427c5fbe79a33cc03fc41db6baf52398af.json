{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kesha\\\\online-code-editor\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { python } from '@codemirror/lang-python';\nimport { java } from '@codemirror/lang-java';\nimport { dracula } from '@uiw/codemirror-theme-dracula';\nimport { githubDark } from '@uiw/codemirror-theme-github';\nimport { vscodeDark } from '@uiw/codemirror-theme-vscode';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { saveCode, executeCode } from './utils/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState('// Write your code here');\n  const [language, setLanguage] = useState('javascript');\n  const [theme, setTheme] = useState('vscodeDark');\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [font, setFont] = useState('default');\n  const [output, setOutput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ... existing theme and language configurations ...\n\n  const handleRunCode = async () => {\n    setIsLoading(true);\n    try {\n      const result = await executeCode(code, language);\n      setOutput(result.output);\n    } catch (error) {\n      setOutput(`Error: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `App ${isFullScreen ? 'fullscreen' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Online Code Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRunCode,\n          disabled: isLoading,\n          className: \"run-button\",\n          children: isLoading ? 'Running...' : 'Run Code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-container\",\n        children: [/*#__PURE__*/_jsxDEV(CodeMirror, {\n          value: code,\n          height: isFullScreen ? '50vh' : '400px',\n          theme: themes[theme],\n          extensions: [languages[language]],\n          onChange: handleCodeChange,\n          className: `editor-font-${font}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"output\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X1qrTElLDqXlLNrYkLHyUKAVZUI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CodeMirror","javascript","python","java","dracula","githubDark","vscodeDark","ErrorBoundary","saveCode","executeCode","jsxDEV","_jsxDEV","App","_s","code","setCode","language","setLanguage","theme","setTheme","isFullScreen","setIsFullScreen","font","setFont","output","setOutput","isLoading","setIsLoading","handleRunCode","result","error","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","value","height","themes","extensions","languages","onChange","handleCodeChange","handleSave","_c","$RefreshReg$"],"sources":["C:/Users/kesha/online-code-editor/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { python } from '@codemirror/lang-python';\nimport { java } from '@codemirror/lang-java';\nimport { dracula } from '@uiw/codemirror-theme-dracula';\nimport { githubDark } from '@uiw/codemirror-theme-github';\nimport { vscodeDark } from '@uiw/codemirror-theme-vscode';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { saveCode, executeCode } from './utils/api';\nimport './App.css';\n\nfunction App() {\n  const [code, setCode] = useState('// Write your code here');\n  const [language, setLanguage] = useState('javascript');\n  const [theme, setTheme] = useState('vscodeDark');\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [font, setFont] = useState('default');\n  const [output, setOutput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ... existing theme and language configurations ...\n\n  const handleRunCode = async () => {\n    setIsLoading(true);\n    try {\n      const result = await executeCode(code, language);\n      setOutput(result.output);\n    } catch (error) {\n      setOutput(`Error: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className={`App ${isFullScreen ? 'fullscreen' : ''}`}>\n        <h1>Online Code Editor</h1>\n        <div className=\"editor-controls\">\n          {/* ... existing controls ... */}\n          <button \n            onClick={handleRunCode} \n            disabled={isLoading}\n            className=\"run-button\"\n          >\n            {isLoading ? 'Running...' : 'Run Code'}\n          </button>\n        </div>\n        <div className=\"editor-container\">\n          <CodeMirror\n            value={code}\n            height={isFullScreen ? '50vh' : '400px'}\n            theme={themes[theme]}\n            extensions={[languages[language]]}\n            onChange={handleCodeChange}\n            className={`editor-font-${font}`}\n          />\n          <div className=\"output-container\">\n            <h3>Output:</h3>\n            <pre className=\"output\">{output}</pre>\n          </div>\n          <button onClick={handleSave}>Save Code</button>\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}